name: Build and Deploy (Staging)
on:
  pull_request:

jobs:
  Build:
    name: 'Build and Push to ACR'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push to ACR
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ vars.ACR_URL }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.event.pull_request.head.sha || github.sha }}
          file: Dockerfile
  Deploy:
    name: 'Deploy to Azure'
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Resource Group
      uses: azure/CLI@v1.0.9
      with:
        azcliversion: 2.49.0
        inlineScript: |
          az group create --resource-group ${{ vars.AZURE_STAGING_RG }} --location europewest
  
    - name: Azure Bicep Deploy
      uses: Azure/arm-deploy@v2
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ vars.AZURE_STAGING_RG }}
        template: ./deploy/main.bicep
        parameters: '
          dockerImageName=${{ vars.DOCKER_IMAGE_NAME }}
          dockerImageTag=${{ github.event.pull_request.head.sha || github.sha }}
          appServiceName=${{ vars.DOCKER_IMAGE_NAME }}-staging
          containerRegistry=${{ vars.ACR_URL }}
          environment=staging'
        failOnStdErr: false